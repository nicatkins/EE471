% Input values
clearvars
vals = input("Enter the duct height, width in meters (ht, w): ")
h = input("Enter mesh size h in meters: ")
V = input("Enter electric potentials [right, left, top, bottom]: ");

rt = V(1);
lft = V(2);
top = V(3);
bot = V(4);

y = vals(1);
x = vals(2);
rows = (y/h)-1; %2
cols = (x/h)-1; %3
s = int8(rows.*cols);

% Create A matrix
I = -4 * (eye(s));
s = double(s)
D1 = ones(s - 1, 1); % creates array of 1s for +-1st diagonal
D1(cols:cols:s-1) = 0; % insert 0s when needed
I = I + diag(D1, 1); % add to matrix on 1st diagonal
I = I + diag(D1, -1); % add to matrix on -1st diagonal

edges = s - cols; % number of 1s for diagonal representing adjacent rows
E1 = ones(edges, 1); % creates array for 1s in adjacent rows
I = I + diag(E1, cols); % add to matrix in [# of cols]th diagonal
I = I + diag(E1, -cols); % add to matrix in -[# of cols]th diagonal

% B matrix
B(1:cols:s, 1) = -lft;
B(cols:cols:s, 1) = -rt;
B(1:1:cols, 1) = B(1:1:cols) -top;
B(s-cols+1:1:s, 1) = B(s-cols+1:1:s) -bot;

% Solving for x matrix
xmat = I\B;

% Creating Mesh
mesh = reshape(xmat, cols, rows); % takes solution and puts into original mesh
mesh = mesh'; % takes transpose, since it is column wise
figure
phidist = imagesc(mesh);
